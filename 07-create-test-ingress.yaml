apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-nginx-ingress
  namespace: demo
  labels:
    app: test-nginx-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-nginx-ingress
  template:
    metadata:
      labels:
        app: test-nginx-ingress
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80
          name: web-port
          protocol: TCP
#        volumeMounts:
#          - mountPath: "/vol-01"
#            name: pvc-vol-01
#      volumes:
#        - name: pvc-vol-01
#          persistentVolumeClaim:
#            claimName: gluster-pvc
#      imagePullSecrets:
#      - name: pull-secret-name

---
apiVersion: v1
kind: Service
metadata:
  name: service-test-nginx-ingress
  namespace: demo
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: test-nginx-ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-nginx-ingress
  namespace: demo
  annotations:
    kubernetes.io/ingress.class: "nginx"
    #nginx.ingress.kubernetes.io/auth-type: basic
    #nginx.ingress.kubernetes.io/auth-secret: basic-auth
    #nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - kubeadmin'
spec:
#  tls:
#  - hosts:
#      - https-example.foo.com
#    secretName: testsecret-tls
  rules:
  - host: test-nginx.nginx-ingress.milkymonz.dedyn.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-test-nginx-ingress
            port:
              number: 80
