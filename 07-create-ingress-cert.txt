create cert

certbot -d '*.milkymonz.dedyn.io' --manual --preferred-challenges dns certonly

------------------------------------------------------------------------------
Please deploy a DNS TXT record under the name
_acme-challenge.milkymonz.dedyn.io with the following value:

7rcJfhipVcf9jWrgZR6QsOly7Spt_WmLL5mM0gzpK70

Before continuing, verify the record is deployed.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/milkymonz.dedyn.io/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/milkymonz.dedyn.io/privkey.pem
   Your cert will expire on 2022-08-17. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot
   again. To non-interactively renew *all* of your certificates, run
   "certbot renew"
 - If you like Certbot, please consider supporting our work by:
--------------------------------------------------------------------------------

Create Secret 

kubectl create secret tls my-tls-secret \
> --cert=/etc/letsencrypt/live/milkymonz.dedyn.io/fullchain.pem \
> --key=/etc/letsencrypt/live/milkymonz.dedyn.io/privkey.pem \
> -n demo



---------------------------------------------------------------------------------
Basic Authen Nginx 

0. install htpasswd 

sudo apt update -y
apt install apache2-utils -y

1. Create user, pass with htpasswd 

htpasswd -c auth foo

New password:
Re-type new password:


2. Convert htpasswd into a secret

kubectl create secret generic basic-auth --from-file=auth

3. Examine secret

kubectl get secret basic-auth -o yaml

4. Using kubectl, create an ingress tied to the basic-auth secret

metadata:
  name: ingress-with-auth
  annotations:
    # type of authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - foo'
    
kubectl apply -f nginx-ingress-file.yaml

-----------------------------------------------------------------------------------------------    

curl with authentication 

curl -v http://test-nginx.nginx-ingress.milkymonz.dedyn.io -u 'kubeadmin'

---------------------------------------------------------------------------------
